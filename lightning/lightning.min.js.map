{"version":3,"file":"lightning.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/platforms/PlatformLoader.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs","../src/textures/StaticTexture.mjs","../src/components/BorderComponent.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n        const reversedPos = this._layout.mainAxisSize - endPos;\n        item.flexItem._setMainAxisLayoutPos(reversedPos);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = Utils.isSpark ? this._stage.platform.getFontSetting(this) : this._getFontSetting();\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _getFontSetting() {\n        let ff = this._settings.fontFace;\n\n        if (!Array.isArray(ff)) {\n            ff = [ff];\n        }\n\n        let ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === \"serif\" || ff[i] === \"sans-serif\") {\n                ffs.push(ff[i]);\n            } else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(\",\")}`\n    }\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || (2048 / this.getPrecision());\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth += (10 - innerWidth);\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer.\n        // than its horizontal bounds.\n        let lines = text.split(/\\r?\\n/g);\n        let allLines = [];\n        let realNewlines = [];\n        for (let i = 0; i < lines.length; i++) {\n            let resultLines = [];\n            let result = '';\n            let spaceLeft = wordWrapWidth - indent;\n            let words = lines[i].split(' ');\n            for (let j = 0; j < words.length; j++) {\n                const wordWidth = this.measureText(words[j], letterSpacing);\n                const wordWidthWithSpace = wordWidth + this.measureText(' ',letterSpacing);\n                if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                    // Skip printing the newline if it's the first word of the line that is.\n                    // greater than the word wrap width.\n                    if (j > 0) {\n                        resultLines.push(result);\n                        result = '';\n                    }\n                    result += words[j];\n                    spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n                }\n                else {\n                    spaceLeft -= wordWidthWithSpace;\n                    result += ' ' + words[j];\n                }\n            }\n\n            resultLines.push(result);\n            result = '';\n\n            allLines = allLines.concat(resultLines);\n\n            if (i < lines.length - 1) {\n                realNewlines.push(allLines.length);\n            }\n        }\n\n        return {l: allLines, n: realNewlines};\n    };\n\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n    \n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = Utils.isSpark ? this._stage.platform.getFontSetting(this) : this._getFontSetting();\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _getFontSetting() {\n        let ff = this._settings.fontFace;\n\n        if (!Array.isArray(ff)) {\n            ff = [ff];\n        }\n\n        let ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === \"serif\" || ff[i] === \"sans-serif\") {\n                ffs.push(ff[i]);\n            } else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(\",\")}`\n    }\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : 2048 / precision;\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else if (renderInfo.lineHeight > fontSize) {\n            // When lineheight is larger than the font size we're rendering, we set the height of the canvas based on the number of lines we're rendering.\n            // This makes each \"line\" a containing box that is line height sized, and text is positioned inside that box.\n            //\n            // Ideographic fonts may break this model, and require additional space?\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // This calculates the baseline offset in pixels from the font size.\n        // To retrieve this ratio, you would do this calculation:\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\n        //\n        // This give you the ratio for the baseline, which is then used to figure out\n        // where the baseline is relative to the bottom of the text bounding box.\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\n            vaOffset = -baselineOffsetInPx;\n        } else if (renderInfo.verticalAlign == 'middle') {\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (lastWord == ' ' || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont)[0];\n            suffix.lineNo = index;\n            if (lastLineText.length) {\n                suffix.x = lastLineText[lastLineText.length - 1].x + lastLineText[lastLineText.length - 1].width;\n            } else {\n                suffix.x = 0;\n            }\n            lastLineText.push(suffix)\n\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || lastLineText[lastLineText.length - 2].text == ' ') {\n                lastLineText.splice(lastLineText.length - 2, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                const prev = lastLineText[lastLineText.length - 2] || {x: 0, width: 0}\n                suffix.x = prev.x + prev.width;\n                if (lastLineText.length < 2) {\n                    break;\n                }\n            }\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum; \n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n \n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n\n    tokenize(text) {\n        const re =/ |\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g\n    \n        const delimeters = text.match(re) || [];\n        const words = text.split(re) || [];\n    \n        let final = [];\n        for (let i = 0; i < words.length; i++) {\n            final.push(words[i], delimeters[i])\n        }\n        final.pop()\n        return final.filter((word) => word != '');\n    \n    }\n    \n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\n    \n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                const matched = colorRegexp.exec(t);\n                colorStack.push(\n                    StageUtils.getRgbaString(parseInt(matched[1]))\n                );\n                color += 1;\n                t = '';\n\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (this.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontBaselineRatio() {\n        return this._fontBaselineRatio;\n    }\n    \n    set fontBaselineRatio(v) {\n        if (this._fontBaselineRatio !== v) {\n            this._fontBaselineRatio = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        // Inherit font face from stage.\n        if (args.fontFace === null) {\n            args.fontFace = this.stage.getOption('defaultFontFace');\n        }\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = (args.advancedRenderer)\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\n              : new TextTextureRenderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontBaselineRatio = this._fontBaselineRatio;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\nproto._fontBaselineRatio = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index < this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if (index < this._items.length) {\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n                }\n\n                const prevItem = this._items[index];\n\n                // Doesn't exist yet: overwrite current.\n                this._items[index] = item;\n\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n\n                this.onSet(item, index, prevItem);\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource ? this.__core.displayedTextureSource._source : null;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOfScreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n            this._program = null;\n        }\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n            }\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = {format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE};\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2/w, 2/h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n    \n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n\n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n\n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        // Alternative handler to avoid RAF when idle\n        this._loopHandler = null;\n        this._idleLoopCounter = 0;\n        this._idleLoopDelay = 60;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n\n        this._registerVisibilityChangeHandler();\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n        this._removeVisibilityChangeHandler();\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    switchLoop() {\n        if (this._idleLoopCounter < this._idleLoopDelay) {\n            this._idleLoopCounter++;\n            return;\n        }\n        if (!this.stage.ctx.hasRenderUpdates()) {\n            this.stopLoop();\n            this._loopHandler = setInterval(() => {\n                this.stage.updateFrame();\n                this.stage.idleFrame();\n                if (this.stage.ctx.hasRenderUpdates()) {\n                    clearInterval(this._loopHandler);\n                    this.startLoop();\n                };\n            }, 1000 / 60);\n        } else {\n            this._idleLoopCounter = 0;\n        }\n    }\n\n    loop() {\n        let self = this;\n        let lp = function() {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.updateFrame();\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\n                    self.switchLoop();\n                }\n                self.stage.drawFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n            } else {\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n                const ctx = source.getContext('2d');\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    loadSrcTexture({src, hasAlpha}, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function(err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function({imageBitmap, hasAlphaChannel}) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: {src: src},\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function() {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0,5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function(err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function() {\n                cb(null, {\n                    source: image,\n                    renderInfo: {src: src},\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function() {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts);\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n\n    /**\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\n     */\n    _registerVisibilityChangeHandler() {\n        this._visibilityChangeHandler = () => {\n            if (document.visibilityState === 'visible') {\n                this.stage.root.core.setHasRenderUpdates(2);\n                this.stage.drawFrame();\n            }\n        }\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\n    }\n\n    _removeVisibilityChangeHandler() {\n        if (this._visibilityChangeHandler) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n    \n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            this._readPixels();\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n\n        // Block OpenGL pipeline to prevent framebuffer flickering\n        // on certain devices\n        if (this.stage.getOption('readPixelsAfterDraw')) {\n            this._readPixels();\n        }\n    }\n\n    _readPixels() {\n        const pixels = new Uint8Array(4);\n        const gl = this.stage.gl;\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch(e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp',{precision:0.6666666667, fontSize: 24})\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n        opt('readPixelsAfterDraw', false);\n        opt('forceTxCanvasSource', false);\n        opt('pauseRafLoopOnIdle', false);\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n\n    _performUpdateSource() {\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n    }\n\n    _calculateDt() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n    }\n\n    updateFrame() {\n        this._calculateDt();\n        this.emit('frameStart');\n        this._performUpdateSource();\n        this.emit('update');\n    }\n\n    idleFrame() {\n        this.textureThrottler.processSome();\n        this.emit('frameEnd');\n        this.frameCounter++;\n    }\n\n    drawFrame() {\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    renderFrame() {\n        this.ctx.frame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y){\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x,y,children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while(true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while(n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true; \n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                child._handleClick(target);\n                break;\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a,b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1: -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision();\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onError = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[4];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n"],"names":["StageUtils","[object Object]","v1","v2","p","r","g","b","a","color","toFixed","Math","floor","argb","rgba","max","min","v","c1","c2","round","c","t","n","length","i","r1","g1","b1","a1","alpha","deg","PI","d","xc","xb","xa","yc","yb","ya","time","cbx","cbxd","dx","it","minT","maxT","str","getTimingBezier","s","indexOf","parts","substr","split","console","warn","parseFloat","isNaN","Utils","value","isObjectLiteral","Array","isArray","getDeepClone","obj","keys","Object","clone","obj1","obj2","type","constructor","index","arr","getModuloIndex","len","ceil","isFunction","isObject","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","equalValues","this","result","forEach","push","iterator","iteratorResult","next","done","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","isNode","isPS4","isZiggo","Base","name","settings","names","patchObjectProperty","error","setter","setSetting","defaultSetter","charAt","__local","func","SpacingCalculator","mode","numberOfItems","remainingSpace","itemGaps","spacePerGap","spacingBefore","spacingBetween","getSpacing","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_lines","_getTotalCrossAxisSize","crossAxisSize","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","align","recursiveResizeOccured","setItemPositions","totalCrossAxisSize","total","FlexUtils","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","funcW","_allowRelAxisSizeFunction","getParentAxisSizeWithPadding","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","x","y","pos","size","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","getAxisMinSize","flexItem","shrink","getRelAxisSize","_horizontal","resizeMainAxis","resizeCrossAxis","setAxisLayoutSize","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","marginTop","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","SizeGrower","_grownSize","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","grow","maxSize","_getMainAxisMaxSizeSetting","maxGrow","ItemPositioner","lineLayout","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","getGrownSize","shrinker","getShrunkSize","position","_calcCrossAxisMaxLayoutSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","crossAxisMinSize","_getCrossAxisMinSize","mainAxisContentSize","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","performLayout","resizingMainAxis","isMainAxisFitToContents","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","getMainAxisMinSize","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","getAxisLayoutPos","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","shrunk","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","finalize","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","layoutLines","init","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","isZeroAxisSize","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","targetCrossAxisSize","ctr","getPaddingOffset","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","changedDimensions","changedContents","direction","f","_changedContents","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","padding","_changedDimensions","patchObject","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","minWidth","minHeight","maxWidth","maxHeight","margin","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","setAxisLayoutPos","resizeAxis","getTotalMargin","getMarginOffset","_getMainAxisPadding","_getMainAxisMargin","_getCrossAxisLayoutSize","FlexTarget","_target","_recalc","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","isChanged","layoutTree","_enableFlex","patch","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","from","to","isFlexContainer","_changedChildren","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","loadError","has","add","delete","becomesUsed","becomesUnused","isResultTexture","cb","texture","elements","element","active","isUsed","load","cancel","isLoading","free","forceSync","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","update","frameCounter","forEachActiveElement","forceRenderUpdate","_updateTextureCoords","nativeTexture","newNativeTexture","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","forEachEnabledElement","_updateDimensions","e","onTextureSourceLoadError","isLoaded","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","renderOffscreen","setHasRenderUpdates","_setRecalc","colorize","textureManager","updateResultTexture","hasEnabledElements","resultTexture","getResultTexture","replaceNativeTexture","core","_hasRenderUpdates","release","renderTextureReused","releaseRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","offsetX","hasFlexLayout","_disableFuncX","setOriginalXWithoutUpdatingLayout","_updateLocalTranslateDelta","forceLayout","_triggerRecalcTranslate","offsetY","_disableFuncY","setOriginalYWithoutUpdatingLayout","scaleX","_updateLocalTransform","scaleY","scale","pivotX","_updateLocalTranslate","pivotY","pivot","mountX","mountY","mount","rotation","prev","_updateLocalAlpha","_updateEnabledFlag","setVisible","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","child","splice","removed","added","order","fromIndex","toIndex","isEstimate","ulx","uly","brx","bry","displayedTextureSource","textureSource","isRoot","root","coordsWidth","coordsHeight","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","forceZIndexContext","prevZContext","_getZIndexedDescs","isAncestorOf","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","colorUl","colorUr","colorBl","colorBr","onUpdate","onAfterUpdate","onAfterCalcs","shader","prevShader","activeShader","defaultShader","activeShaderOwner","clipping","clipbox","renderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_setShaderOwnerChildrenRecursive","_renderAdvanced","_stashedTexCoords","_stashedColors","outOfBounds","boundsMargin","layoutFlexTree","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","_hasRenderContext","updateTreeOrder","useRenderToTexture","mustRenderToTexture","bboxW","bboxH","sx","sy","ex","ey","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","hasRenderTexture","cleared","ignore","cache","hasResultTexture","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","reuseTextureAsRenderTexture","getRenderTexture","setTexturizer","_stashTexCoords","_stashColors","_unstashColors","_unstashTexCoords","zSort","ptr","m","j","sort","mergeResult","localTa","localTb","localTc","localTd","renderUpdates","relX","relY","inBound","inScissor","collectAtCoord","tx","ty","getCornerPoints","sc","_ensureLayout","EventEmitter","_hasEventListeners","listener","_eventFunction","_eventListeners","combiner","wrapper","arg1","arg2","arg3","off","__originalFunc","on","current","listeners","l","map","object","addAsMixin","cls","once","removeListener","emit","listenerCount","removeAllListeners","Shader","coreContext","_initialized","_elements","renderer","createShader","isShader","isValidShaderType","cleanup","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","addTexture","incActiveCount","removeTexture","decActiveCount","_checkForNewerReusableTextureSource","incActiveTextureCount","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","decActiveTextureCount","isValid","_getIsValid","_updateSource","addUpdateSourceTexture","_getTextureSource","_getLookupId","getTextureSource","_getSourceLoader","getReusableTextureSource","newSource","oldSource","resizeMode","clipX","clipY","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","desiredSize","choppedOffPixels","_clearResizeMode","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","nonDefaults","precision","ph","isAutosizeTexture","getRenderWidth","getRenderHeight","isTexture","ImageTexture","super","_src","_hasAlpha","src","hasAlpha","getOption","fc","charCodeAt","platform","loadSrcTexture","getNonDefaults","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","font","getFontSetting","_getFontSetting","textBaseline","ff","fontFace","ffs","fontStyle","fontSize","getPrecision","document","fonts","fontSetting","check","text","catch","then","loadPromise","_load","drawText","_draw","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","setFontProperties","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","measureText","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","_calculateRenderInfo","linePositionX","linePositionY","globalAlpha","fillRect","translate","drawLines","verticalAlign","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","getRgbaString","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","word","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","allLines","realNewlines","resultLines","spaceLeft","words","wordWidthWithSpace","concat","space","reduce","acc","char","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","firstWord","lastWord","shift","pop","lastLineText","filter","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","letters","re","delimeters","match","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","exec","o","parsed","applyFontStyle","breakIndex","totalWidth","_getBreakIndex","TextTexture","advancedRenderer","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","toString","args","cloneArgs","gl","getDrawingCanvas","draw","texParams","sharpCfg","sharpen","isBoolean","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","targetValue","isAttached","reset","delay","_updateDrawValue","removeActive","stop","addActive","getDrawValue","attached","dt","delayLeft","duration","invokeListeners","timingFunctionImpl","_timingFunctionImpl","startValue","isTransition","ObjectList","_refs","first","last","addAt","currentIndex","createItem","setAt","ref","onAdd","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","removeAt","onRemove","onSync","isItem","_setByObject","_setByArray","refs","_getRefs","crefs","cref","idx","array","same","_equalsArray","marker","newItems","_setItems","prevItems","get","ElementChildList","prevChildList","childList","removeChildAt","_setParent","_connectParent","addChildAt","gc","syncChildren","setChildAt","moveChild","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","isUcChar","_throwError","removeTag","clearRef","_addTag","setRef","setAsRoot","_updateAttachedFlag","_unsetTagsParent","_setTagsParent","_updateCollision","depth","levels","getDepth","getAncestor","o1","o2","l1","l2","_isEnabled","withinBoundsMargin","newAttached","_isAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","addElement","_setActiveFlag","_unsetActiveFlag","removeElement","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","deactivate","_onInactive","renderWidth","_getRenderWidth","renderHeight","_getRenderHeight","finalX","finalY","finalW","finalH","_enableTextureError","prevTexture","prevSource","sourceChanged","setDisplayedTextureSource","unknownSize","_onResize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","tempty","setTextureCoords","tag","tags","iteratorToArray","tagSet","parentTreeTags","comp","Map","set","setToArray","removes","adds","hasTag","currentTags","addTag","list","mtag","values","_tag","res","_getByTag","level","resn","tagRoot","path","select","selectors","_select","isRef","pointIdx","arrowIdx","_selectChilds","subPath","localTags","getTags","getLocationString","getSettings","getPrettyString","colorKeys","JSON","stringify","k","childStr","isEmpty","childArray","missing","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","disableFuncW","disableFuncH","collision","_collision","colorTop","colorBottom","colorLeft","colorRight","setTags","_allowChildrenAccess","rect","rectangleTexture","enableTextTexture","isString","create","rtt","rttLazy","paths","firstCharCode","remove","message","animations","createAnimation","_getTransition","_setTransition","transitions","transition","smooth","setSmooth","_transitions","finish","isTransitionSettings","defaultTransitionSettings","createSettings","_removeTransition","start","toLowerCase","isColorProperty","mergeColors","mergeNumbers","tree","hasChildren","collectChildren","getProperties","getAt","properties","props","key","StateMachine","setupStateMachine","targetConstructor","router","setPrototypeOf","_initStateMachine","stateMachineType","StateMachineType","_sm","event","_hasMethod","_state","__path","statePath","currentStatePath","state","getStateByPath","currentState","__level","_getStateAtLevel","member","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","context","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","apply","_stateIndex","__index","_routedType","memberNames","cur","memberName","getStateMemberAlias","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","StateMachineRouter","arguments","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","curState","getPrototypeOf","__supportsSpread","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","stateMap","members","_getStateMemberNames","_getStateMemberNamesForType","_isStateLocalMember","_createStateMap","_addState","parentState","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","Component","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","_getState","application","updateFocusPath","__propertyBinding","__func","propObj","targetObj","targetProp","prop","propDependencies","propName","__obj","__prop","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","isNumber","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","newTarget","prevTarget","_focusPath","cparent","ancestor","getSharedAncestor","isComponent","signals","alterSignals","passSignals","alterPassSignals","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","startsWith","_doFireAncestors","fire","subs","collectSubComponents","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","CoreQuadOperation","shaderOwner","scissor","quads","getTexture","getElementCore","getElement","getTextureWidth","getTextureHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","getAttribsDataByteOffset","coords","getRenderTextureCoords","renderExec","_projection","projection","CoreRenderExecutor","_bindRenderTexture","_setScissor","_clearRenderTexture","_reset","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","destroy","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","addEmpty","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","clear","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","useDefault","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","location","getUniformLocation","getAttribLocation","glProgram","compiled","glFunction","_valueEquals","clonedValue","_valueClone","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","call","WebGLShader","shaderPrograms","initialize","compile","initialized","setUniformValue","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getProjection","_getProjection","DefaultShader","vertexAttribPointer","_attrib","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","_setUniform","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","WebGLRenderer","shaderProgram","getWebGL","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","deleteFramebuffer","deleteTexture","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","RGB","uploadGlTexture","cloneObjShallow","mca","mergeColorAlpha","cx","cy","extra","setExtraAttribsInBuffer","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","C2dCoreQuadOperation","getRenderContext","getSimpleTc","getWhite","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","getRgbaStringFromArray","globalCompositeOperation","beginPath","closePath","fill","clearRect","restore","save","_equalScissorAreas","_restoreContext","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","mergeMultiColorsEqual","rgb","tintTexture","getTintTexture","drawImage","transparency","gradient","createLinearGradient","addColorStop","getRgbString","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","delta","addMemoryUsage","_hasCache","_getCache","prevMemUsage","memoryUsage","_addMemoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","getC2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","setRenderContext","setWhite","isWhite","setSimpleTc","hasSimpleTexCoords","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","createCoreRenderExecutor","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_imageWorker","_registerVisibilityChangeHandler","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","loop","stopLoop","setInterval","updateFrame","idleFrame","clearInterval","startLoop","lp","switchLoop","drawFrame","requestAnimationFrame","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","cancelCb","isPng","Image","crossOrigin","removeAttribute","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","performance","now","changes","keyhandler","_keydownListener","addEventListener","_keyupListener","removeEventListener","clickHandler","_clickListener","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","cap","DITHER","_getDefaultFlag","change","program","va","equal","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","pname","param","_getPixelStoreiIndex","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","migrate","setProgram","fb","setBuffer","setFramebuffer","setRenderbuffer","setFlag","normalized","stride","setActiveTexture","setPixelStorei","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","red","green","blue","_blendColor","_blendEquation","modeRGB","modeAlpha","_blendEquationSeparate","sfactor","dfactor","_blendFunc","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","_clearColor","_clearDepth","_clearStencil","_colorMask","_cullFace","_depthFunc","flag","_depthMask","zNear","zFar","_depthRange","_frontFace","_lineWidth","factor","units","_polygonOffset","invert","_sampleCoverage","_stencilFunc","_stencilMask","_stencilOp","indx","_vertexAttrib1f","_vertexAttrib1fv","_vertexAttrib2f","_vertexAttrib2fv","z","_vertexAttrib3f","_vertexAttrib3fv","_vertexAttrib4f","_vertexAttrib4fv","__proto__","method","_initStateManager","TextureManager","_uploadedTextureSources","textureSourceHashmap","usedMemory","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","allowCleanup","_freeManagedTextureSource","managed","clearNativeTexture","TextureThrottler","_remove","_sources","_data","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","createCoreRenderState","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","_fillRenderState","_readPixels","_performRender","pixels","Uint8Array","readPixels","execute","prec","_createRenderTexture","maxAge","limit","createRenderTexture","freeRenderTexture","copyRenderTexture","TransitionSettings","_timingFunction","getTimingFunction","timingFunction","TransitionManager","progress","isRunning","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","0","defaultSmoothness","lv","pe","idp","sm","pi","ni","nc","getRgbaComponents","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","getArgbNumber","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getValue","getAnimatedElements","sv","getResetValue","hasColorProperty","selector","resetValue","rv","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","actions","aas","action","stopTimingFunction","stopTimingFunctionImpl","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","play","STOPPED","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","AnimationManager","RectangleTexture","Stage","_setOptions","_lastGcFrame","platformType","PlatformLoader","isWebglSupported","createWebGLContext","createCanvasContext","_mode","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","opt","app","log","_updatingFrame","getHrTime","fixedDt","_calculateDt","processSome","nextFrame","getRgbaComponentsNormalized","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","freeUnusedRenderTextures","serviceprovider","addServiceProvider","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","registerKeydownHandler","_receiveKeydown","registerKeyupHandler","_receiveKeyup","registerClickHandler","_receiveClick","registerHoverHandler","_receiveHover","_recieveScrollWheel","__options","38","40","37","39","13","8","27","setApplication","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","_focus","_unfocus","_focusChange","focusedComponent","focusSettings","defaultSetFocusSettings","_setFocusSettings","defaultHandleFocusSettings","_handleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","_getFocused","newParts","focusPath","events","_getMostSpecificHandledMember","keyCode","hasTimer","longpress","focusTopDownEvent","focusBottomUpEvent","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","getAncestors","elem","_handleUnhover","style","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","cw","ch","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","content","factory","Tools","canvasFactory","radius","strokeWidth","strokeColor","fillColor","getCanvasTexture","createRoundRect","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","blur","createShadowRect","url","createSvg","img","ObjMerger","__mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","isMf","merge","ObjectListProxy","ObjectListWrapper","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","htmlElement","html","innerHTML","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","ListItems","checkStarted","_reloadVisibleElements","_started","setIndex","_index","ri","realIndex","LinearBlurShader","_direction","_kernelRadius","redraw","kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","C2dFastBlurComponent","Textwrap","C2dBlurShader","Content","_textwrap","sel","_paddingX","_paddingY","_multiSpline","0.25","0.5","0.75","1","_updateBlurSize","paddingX","paddingY","_amountToKernelRadius","getSpline","WebGLFastBlurComponent","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_layers","_output","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","_buildLayers","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomBaseShader","SmoothScaleComponent","ContentWrap","Scale","_smoothScale","_iterations","smoothScale","its","_setIterations","scalers","useScalers","contentWrap","WebGLGrayscaleShader","WebGLDefaultShader","C2dGrayscaleShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","graining","getElementWidth","getElementHeight","getVertexAttribPointerOffset","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","aspectRatio","inputValue","maxDerivative","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","blend","topLeft","num","topRight","bottomRight","bottomLeft","_sc","renderPrecision","FadeOutShader","_fade","right","bottom","left","fade","VignetteShader","_magnitude","_intensity","_pivot","intensity","magnitude","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","period","angle","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","radiusX","radiusY","_radiusY","innerColor","outerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","strength","ambient","fudge","rx","ry","pivotZ","PerspectiveShader","MagnifierShader","_magnification","magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","showDot","bool","clockwise","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","StaticTexture","components","FastBlurComponent","Wrap","BloomComponent","BloomBase","BorderComponent","Borders","Top","Right","Bottom","Left","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorder","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","borders","ListComponent","_visibleItems","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","_scrollTransition","immediate","closest","nElements","diff","viewportSize","scrollDelta","ps","wasVisible","invisibleItem","getWrapper","itemSize","viewportScrollOffset","itemScrollOffset","scrollTransitionSettings","scrollTransition","progressAnimation","roll","rollMin","rollMax","invertDirection","tools","lng"],"mappings":"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"}