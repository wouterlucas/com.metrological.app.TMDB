{"version":3,"file":"lightning.es5.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n        const reversedPos = this._layout.mainAxisSize - endPos;\n        item.flexItem._setMainAxisLayoutPos(reversedPos);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = Utils.isSpark ? this._stage.platform.getFontSetting(this) : this._getFontSetting();\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _getFontSetting() {\n        let ff = this._settings.fontFace;\n\n        if (!Array.isArray(ff)) {\n            ff = [ff];\n        }\n\n        let ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === \"serif\" || ff[i] === \"sans-serif\") {\n                ffs.push(ff[i]);\n            } else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(\",\")}`\n    }\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || (2048 / this.getPrecision());\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth += (10 - innerWidth);\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer.\n        // than its horizontal bounds.\n        let lines = text.split(/\\r?\\n/g);\n        let allLines = [];\n        let realNewlines = [];\n        for (let i = 0; i < lines.length; i++) {\n            let resultLines = [];\n            let result = '';\n            let spaceLeft = wordWrapWidth - indent;\n            let words = lines[i].split(' ');\n            for (let j = 0; j < words.length; j++) {\n                const wordWidth = this.measureText(words[j], letterSpacing);\n                const wordWidthWithSpace = wordWidth + this.measureText(' ',letterSpacing);\n                if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                    // Skip printing the newline if it's the first word of the line that is.\n                    // greater than the word wrap width.\n                    if (j > 0) {\n                        resultLines.push(result);\n                        result = '';\n                    }\n                    result += words[j];\n                    spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n                }\n                else {\n                    spaceLeft -= wordWidthWithSpace;\n                    result += ' ' + words[j];\n                }\n            }\n\n            resultLines.push(result);\n            result = '';\n\n            allLines = allLines.concat(resultLines);\n\n            if (i < lines.length - 1) {\n                realNewlines.push(allLines.length);\n            }\n        }\n\n        return {l: allLines, n: realNewlines};\n    };\n\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n    \n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = Utils.isSpark ? this._stage.platform.getFontSetting(this) : this._getFontSetting();\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _getFontSetting() {\n        let ff = this._settings.fontFace;\n\n        if (!Array.isArray(ff)) {\n            ff = [ff];\n        }\n\n        let ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === \"serif\" || ff[i] === \"sans-serif\") {\n                ffs.push(ff[i]);\n            } else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(\",\")}`\n    }\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : 2048 / precision;\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else if (renderInfo.lineHeight > fontSize) {\n            // When lineheight is larger than the font size we're rendering, we set the height of the canvas based on the number of lines we're rendering.\n            // This makes each \"line\" a containing box that is line height sized, and text is positioned inside that box.\n            //\n            // Ideographic fonts may break this model, and require additional space?\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // This calculates the baseline offset in pixels from the font size.\n        // To retrieve this ratio, you would do this calculation:\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\n        //\n        // This give you the ratio for the baseline, which is then used to figure out\n        // where the baseline is relative to the bottom of the text bounding box.\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\n            vaOffset = -baselineOffsetInPx;\n        } else if (renderInfo.verticalAlign == 'middle') {\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (lastWord == ' ' || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont)[0];\n            suffix.lineNo = index;\n            if (lastLineText.length) {\n                suffix.x = lastLineText[lastLineText.length - 1].x + lastLineText[lastLineText.length - 1].width;\n            } else {\n                suffix.x = 0;\n            }\n            lastLineText.push(suffix)\n\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || lastLineText[lastLineText.length - 2].text == ' ') {\n                lastLineText.splice(lastLineText.length - 2, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                const prev = lastLineText[lastLineText.length - 2] || {x: 0, width: 0}\n                suffix.x = prev.x + prev.width;\n                if (lastLineText.length < 2) {\n                    break;\n                }\n            }\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum; \n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n \n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n\n    tokenize(text) {\n        const re =/ |\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g\n    \n        const delimeters = text.match(re) || [];\n        const words = text.split(re) || [];\n    \n        let final = [];\n        for (let i = 0; i < words.length; i++) {\n            final.push(words[i], delimeters[i])\n        }\n        final.pop()\n        return final.filter((word) => word != '');\n    \n    }\n    \n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\n    \n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                const matched = colorRegexp.exec(t);\n                colorStack.push(\n                    StageUtils.getRgbaString(parseInt(matched[1]))\n                );\n                color += 1;\n                t = '';\n\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (this.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontBaselineRatio() {\n        return this._fontBaselineRatio;\n    }\n    \n    set fontBaselineRatio(v) {\n        if (this._fontBaselineRatio !== v) {\n            this._fontBaselineRatio = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        // Inherit font face from stage.\n        if (args.fontFace === null) {\n            args.fontFace = this.stage.getOption('defaultFontFace');\n        }\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = (args.advancedRenderer)\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\n              : new TextTextureRenderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontBaselineRatio = this._fontBaselineRatio;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\nproto._fontBaselineRatio = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index < this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if (index < this._items.length) {\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n                }\n\n                const prevItem = this._items[index];\n\n                // Doesn't exist yet: overwrite current.\n                this._items[index] = item;\n\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n\n                this.onSet(item, index, prevItem);\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource ? this.__core.displayedTextureSource._source : null;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOfScreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n            this._program = null;\n        }\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n            }\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = {format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE};\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2/w, 2/h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n    \n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n\n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n\n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        // Alternative handler to avoid RAF when idle\n        this._loopHandler = null;\n        this._idleLoopCounter = 0;\n        this._idleLoopDelay = 60;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n\n        this._registerVisibilityChangeHandler();\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n        this._removeVisibilityChangeHandler();\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    switchLoop() {\n        if (this._idleLoopCounter < this._idleLoopDelay) {\n            this._idleLoopCounter++;\n            return;\n        }\n        if (!this.stage.ctx.hasRenderUpdates()) {\n            this.stopLoop();\n            this._loopHandler = setInterval(() => {\n                this.stage.updateFrame();\n                this.stage.idleFrame();\n                if (this.stage.ctx.hasRenderUpdates()) {\n                    clearInterval(this._loopHandler);\n                    this.startLoop();\n                };\n            }, 1000 / 60);\n        } else {\n            this._idleLoopCounter = 0;\n        }\n    }\n\n    loop() {\n        let self = this;\n        let lp = function() {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.updateFrame();\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\n                    self.switchLoop();\n                }\n                self.stage.drawFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n            } else {\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n                const ctx = source.getContext('2d');\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    loadSrcTexture({src, hasAlpha}, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function(err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function({imageBitmap, hasAlphaChannel}) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: {src: src},\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function() {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0,5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function(err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function() {\n                cb(null, {\n                    source: image,\n                    renderInfo: {src: src},\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function() {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts);\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n\n    /**\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\n     */\n    _registerVisibilityChangeHandler() {\n        this._visibilityChangeHandler = () => {\n            if (document.visibilityState === 'visible') {\n                this.stage.root.core.setHasRenderUpdates(2);\n                this.stage.drawFrame();\n            }\n        }\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\n    }\n\n    _removeVisibilityChangeHandler() {\n        if (this._visibilityChangeHandler) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n    \n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            this._readPixels();\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n\n        // Block OpenGL pipeline to prevent framebuffer flickering\n        // on certain devices\n        if (this.stage.getOption('readPixelsAfterDraw')) {\n            this._readPixels();\n        }\n    }\n\n    _readPixels() {\n        const pixels = new Uint8Array(4);\n        const gl = this.stage.gl;\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch(e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp',{precision:0.6666666667, fontSize: 24})\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n        opt('readPixelsAfterDraw', false);\n        opt('forceTxCanvasSource', false);\n        opt('pauseRafLoopOnIdle', false);\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n\n    _performUpdateSource() {\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n    }\n\n    _calculateDt() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n    }\n\n    updateFrame() {\n        this._calculateDt();\n        this.emit('frameStart');\n        this._performUpdateSource();\n        this.emit('update');\n    }\n\n    idleFrame() {\n        this.textureThrottler.processSome();\n        this.emit('frameEnd');\n        this.frameCounter++;\n    }\n\n    drawFrame() {\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    renderFrame() {\n        this.ctx.frame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y){\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x,y,children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while(true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while(n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true; \n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                child._handleClick(target);\n                break;\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a,b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1: -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision();\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onError = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[4];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n"],"names":["StageUtils","v1","v2","p","r","g","b","a","color","toFixed","Math","floor","argb","rgba","max","min","v","c1","c2","round","c","t","n","length","i","r1","g1","b1","a1","alpha","deg","PI","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","str","getTimingBezier","s","indexOf","parts","substr","split","console","warn","parseFloat","isNaN","Utils","value","isObjectLiteral","Array","isArray","getDeepClone","obj","keys","Object","clone","obj1","obj2","type","constructor","index","arr","getModuloIndex","len","ceil","isFunction","isObject","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","equalValues","this","result","forEach","push","iterator","iteratorResult","next","done","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","isNode","isPS4","isZiggo","Base","name","settings","names","patchObjectProperty","error","setter","setSetting","defaultSetter","charAt","__local","func","SpacingCalculator","mode","numberOfItems","remainingSpace","spacePerGap","spacingBefore","spacingBetween","itemGaps","getSpacing","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_lines","_getTotalCrossAxisSize","crossAxisSize","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","align","recursiveResizeOccured","setItemPositions","total","FlexUtils","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","funcW","_allowRelAxisSizeFunction","getParentAxisSizeWithPadding","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","x","y","pos","size","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","getAxisMinSize","flexItem","shrink","getRelAxisSize","_horizontal","resizeMainAxis","resizeCrossAxis","setAxisLayoutSize","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","marginTop","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","SizeGrower","_grownSize","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","grow","maxSize","_getMainAxisMaxSizeSetting","maxGrow","ItemPositioner","lineLayout","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","getGrownSize","shrinker","getShrunkSize","position","_calcCrossAxisMaxLayoutSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","_getCrossAxisMinSize","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","performLayout","resizingMainAxis","isMainAxisFitToContents","crossAxisMinSize","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","getMainAxisMinSize","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","getAxisLayoutPos","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","finalize","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","layoutLines","mainAxisContentSize","init","totalCrossAxisSize","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","isZeroAxisSize","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","ctr","getPaddingOffset","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","changedDimensions","changedContents","f","direction","_changedContents","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","_changedDimensions","patchObject","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","setAxisLayoutPos","resizeAxis","getTotalMargin","getMarginOffset","_getMainAxisPadding","_getMainAxisMargin","_getCrossAxisLayoutSize","FlexTarget","_target","_recalc","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","isChanged","layoutTree","_enableFlex","patch","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","from","to","isFlexContainer","_changedChildren","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","shrunk","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","has","add","delete","becomesUsed","becomesUnused","cb","texture","elements","element","active","isUsed","load","cancel","isLoading","free","forceSync","isResultTexture","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","update","frameCounter","forEachActiveElement","forceRenderUpdate","_updateTextureCoords","newNativeTexture","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","forEachEnabledElement","_updateDimensions","e","onTextureSourceLoadError","isLoaded","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","setHasRenderUpdates","_setRecalc","textureManager","updateResultTexture","hasEnabledElements","resultTexture","getResultTexture","nativeTexture","replaceNativeTexture","core","_hasRenderUpdates","release","releaseRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","hasFlexLayout","_disableFuncX","setOriginalXWithoutUpdatingLayout","_updateLocalTranslateDelta","forceLayout","_triggerRecalcTranslate","_disableFuncY","setOriginalYWithoutUpdatingLayout","_updateLocalTransform","scaleX","_updateLocalTranslate","prev","_updateLocalAlpha","_updateEnabledFlag","setVisible","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","child","splice","removed","added","order","fromIndex","toIndex","isEstimate","ulx","uly","brx","bry","textureSource","root","coordsWidth","coordsHeight","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","prevZContext","_getZIndexedDescs","isAncestorOf","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","prevShader","shader","defaultShader","texturizer","_enableRenderToTexture","_disableRenderToTexture","_setShaderOwnerChildrenRecursive","_renderAdvanced","_stashedTexCoords","_stashedColors","layoutFlexTree","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","_hasRenderContext","updateTreeOrder","useRenderToTexture","mustRenderToTexture","sx","sy","ex","ey","bboxW","bboxH","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","renderOffscreen","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","activeShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","hasRenderTexture","cleared","ignore","cache","hasResultTexture","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","reuseTextureAsRenderTexture","renderTextureReused","getRenderTexture","setTexturizer","_stashTexCoords","colorize","_stashColors","_unstashColors","_unstashTexCoords","ptr","m","j","sort","mergeResult","relX","relY","inBound","inScissor","collectAtCoord","tx","ty","getCornerPoints","sc","_ensureLayout","EventEmitter","_hasEventListeners","listener","_eventFunction","_eventListeners","combiner","wrapper","arg1","arg2","arg3","off","__originalFunc","on","current","l","listeners","map","object","addAsMixin","cls","once","removeListener","emit","listenerCount","removeAllListeners","Shader","coreContext","_initialized","_elements","cleanup","renderer","createShader","isShader","isValidShaderType","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","clipping","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","addTexture","incActiveCount","removeTexture","decActiveCount","_checkForNewerReusableTextureSource","incActiveTextureCount","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","decActiveTextureCount","_getIsValid","_updateSource","addUpdateSourceTexture","_getTextureSource","_getLookupId","getTextureSource","_getSourceLoader","getReusableTextureSource","newSource","oldSource","loadError","clipX","clipY","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","scaleY","scale","desiredSize","choppedOffPixels","_clearResizeMode","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","nonDefaults","precision","isAutosizeTexture","getRenderWidth","getRenderHeight","isTexture","ImageTexture","_src","_hasAlpha","src","hasAlpha","getOption","fc","charCodeAt","platform","loadSrcTexture","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","font","getFontSetting","_getFontSetting","textBaseline","ff","fontFace","ffs","fontStyle","fontSize","getPrecision","document","fonts","fontSetting","check","text","catch","then","loadPromise","_load","drawText","_draw","offsetY","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","setFontProperties","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","measureText","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","_calculateRenderInfo","globalAlpha","fillRect","translate","drawLines","verticalAlign","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","getRgbaString","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","word","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","allLines","realNewlines","resultLines","spaceLeft","words","wordWidthWithSpace","concat","space","reduce","acc","char","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","firstWord","lastWord","shift","pop","lastLineText","filter","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","letters","re","delimeters","match","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","exec","o","parsed","applyFontStyle","breakIndex","totalWidth","_getBreakIndex","TextTexture","_this","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","toString","advancedRenderer","args","cloneArgs","gl","getDrawingCanvas","draw","texParams","sharpCfg","sharpen","isBoolean","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","targetValue","isAttached","reset","delay","_updateDrawValue","removeActive","stop","addActive","getDrawValue","attached","dt","delayLeft","duration","invokeListeners","timingFunctionImpl","_timingFunctionImpl","startValue","isTransition","ObjectList","_refs","addAt","currentIndex","createItem","setAt","ref","onAdd","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","removeAt","onRemove","onSync","isItem","_setByObject","_setByArray","refs","_getRefs","crefs","cref","idx","array","same","_equalsArray","marker","newItems","_setItems","prevItems","get","ElementChildList","prevChildList","childList","removeChildAt","_setParent","_connectParent","addChildAt","gc","syncChildren","setChildAt","moveChild","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","isUcChar","_throwError","removeTag","clearRef","_addTag","setRef","setAsRoot","_updateAttachedFlag","isRoot","_unsetTagsParent","_setTagsParent","_updateCollision","depth","levels","getDepth","getAncestor","o1","o2","l1","l2","_isEnabled","withinBoundsMargin","newAttached","_isAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","addElement","_setActiveFlag","_unsetActiveFlag","removeElement","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","deactivate","_onInactive","_getRenderWidth","_getRenderHeight","_enableTextureError","prevTexture","prevSource","displayedTextureSource","sourceChanged","setDisplayedTextureSource","unknownSize","_onResize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","ph","tempty","setTextureCoords","tag","tags","iteratorToArray","tagSet","parentTreeTags","comp","Map","set","setToArray","removes","adds","hasTag","currentTags","addTag","list","mtag","values","_tag","res","_getByTag","level","resn","path","select","selectors","_select","isRef","pointIdx","arrowIdx","_selectChilds","subPath","localTags","getTags","getLocationString","getSettings","getPrettyString","getNonDefaults","childArray","missing","pivotX","pivotY","pivot","mountX","mountY","mount","rotation","colorUl","colorUr","colorBl","colorBr","forceZIndexContext","clipbox","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","boundsMargin","offsetX","disableFuncW","disableFuncH","_collision","collision","setTags","_allowChildrenAccess","rectangleTexture","enableTextTexture","isString","onUpdate","onAfterCalcs","onAfterUpdate","create","rtt","paths","firstCharCode","remove","message","animations","createAnimation","_getTransition","_setTransition","transition","setSmooth","_transitions","finish","isTransitionSettings","transitions","defaultTransitionSettings","createSettings","_removeTransition","start","tree","hasChildren","collectChildren","getProperties","colorKeys","JSON","stringify","k","childStr","isEmpty","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","toLowerCase","isColorProperty","mergeColors","mergeNumbers","getAt","properties","props","key","StateMachine","setupStateMachine","event","_hasMethod","_state","__path","statePath","currentStatePath","state","_sm","getStateByPath","currentState","__level","stateAtLevel","_getStateAtLevel","member","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","context","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","apply","_stateIndex","__index","_routedType","memberNames","cur","memberName","StateMachineType","getStateMemberAlias","targetConstructor","router","setPrototypeOf","_initStateMachine","stateMachineType","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","arguments","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","isValid","curState","getPrototypeOf","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","stateMap","members","_getStateMemberNames","_getStateMemberNamesForType","_isStateLocalMember","_createStateMap","_addState","parentState","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","__supportsSpread","Component","tagRoot","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","_getState","application","updateFocusPath","propObj","targetObj","targetProp","prop","propDependencies","propName","__func","_this2","__obj","__prop","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","newTarget","prevTarget","_focusPath","cparent","ancestor","getSharedAncestor","isComponent","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","startsWith","_doFireAncestors","fire","__propertyBinding","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","isNumber","subs","collectSubComponents","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","CoreQuadOperation","shaderOwner","scissor","quads","getTexture","getElementCore","getElement","renderWidth","renderHeight","getTextureWidth","getTextureHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","getAttribsDataByteOffset","coords","getRenderTextureCoords","renderExec","_projection","projection","CoreRenderExecutor","_bindRenderTexture","_setScissor","_clearRenderTexture","_reset","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","addEmpty","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","clear","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","useDefault","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","location","getUniformLocation","getAttribLocation","glFunction","_valueEquals","clonedValue","_valueClone","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","call","WebGLShader","shaderPrograms","glProgram","initialize","compile","setUniformValue","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getProjection","_getProjection","DefaultShader","vertexAttribPointer","_attrib","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","_setUniform","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","WebGLRenderer","shaderProgram","destroy","getWebGL","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","deleteFramebuffer","deleteTexture","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","RGB","uploadGlTexture","cloneObjShallow","mca","mergeColorAlpha","cx","cy","extra","setExtraAttribsInBuffer","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","C2dCoreQuadOperation","getRenderContext","getSimpleTc","getWhite","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","getRgbaStringFromArray","globalCompositeOperation","beginPath","rect","closePath","fill","clearRect","restore","save","_equalScissorAreas","_restoreContext","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","mergeMultiColorsEqual","rgb","tintTexture","getTintTexture","drawImage","gradient","transparency","createLinearGradient","addColorStop","getRgbString","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","delta","addMemoryUsage","_hasCache","_getCache","prevMemUsage","memoryUsage","_addMemoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","getC2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","setRenderContext","setWhite","isWhite","setSimpleTc","hasSimpleTexCoords","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_imageWorker","_registerVisibilityChangeHandler","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","loop","stopLoop","setInterval","updateFrame","idleFrame","clearInterval","startLoop","requestAnimationFrame","lp","switchLoop","drawFrame","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","cancelCb","isPng","Image","crossOrigin","removeAttribute","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","performance","now","changes","keyhandler","_keydownListener","addEventListener","_keyupListener","removeEventListener","clickHandler","_clickListener","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","cap","DITHER","_getDefaultFlag","change","program","va","equal","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","pname","param","_getPixelStoreiIndex","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","migrate","setProgram","fb","setBuffer","setFramebuffer","setRenderbuffer","setFlag","normalized","stride","setActiveTexture","setPixelStorei","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","red","green","blue","_blendColor","_blendEquation","modeRGB","modeAlpha","_blendEquationSeparate","sfactor","dfactor","_blendFunc","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","_clearColor","_clearDepth","_clearStencil","_colorMask","_cullFace","_depthFunc","flag","_depthMask","zNear","zFar","_depthRange","_frontFace","_lineWidth","factor","units","_polygonOffset","invert","_sampleCoverage","_stencilFunc","_stencilMask","_stencilOp","indx","_vertexAttrib1f","_vertexAttrib1fv","_vertexAttrib2f","_vertexAttrib2fv","z","_vertexAttrib3f","_vertexAttrib3fv","_vertexAttrib4f","_vertexAttrib4fv","__proto__","method","_initStateManager","TextureManager","_uploadedTextureSources","textureSourceHashmap","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","allowCleanup","_freeManagedTextureSource","managed","clearNativeTexture","TextureThrottler","_remove","_sources","_data","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","createCoreRenderState","createCoreRenderExecutor","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","zSort","_fillRenderState","_readPixels","_performRender","pixels","Uint8Array","readPixels","execute","prec","_createRenderTexture","maxAge","limit","createRenderTexture","freeRenderTexture","copyRenderTexture","TransitionSettings","_timingFunction","getTimingFunction","TransitionManager","progress","isRunning","_toConsumableArray","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","last","pe","idp","sm","pi","ni","nc","getRgbaComponents","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","getArgbNumber","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getValue","getAnimatedElements","sv","getResetValue","hasColorProperty","selector","resetValue","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","aas","action","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","play","STOPPED","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","stopTimingFunctionImpl","AnimationManager","RectangleTexture","Stage","_setOptions","_lastGcFrame","platformType","isWebglSupported","createWebGLContext","createCanvasContext","_mode","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","opt","app","log","_updatingFrame","getHrTime","fixedDt","_calculateDt","processSome","nextFrame","getRgbaComponentsNormalized","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","usedMemory","freeUnusedRenderTextures","serviceprovider","addServiceProvider","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","registerKeydownHandler","_receiveKeydown","registerKeyupHandler","_receiveKeyup","registerClickHandler","_receiveClick","registerHoverHandler","_receiveHover","_recieveScrollWheel","__options","setApplication","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","_focus","_unfocus","_focusChange","focusedComponent","focusSettings","defaultSetFocusSettings","_setFocusSettings","defaultHandleFocusSettings","_handleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","_getFocused","newParts","events","focusPath","_getMostSpecificHandledMember","returnValue","keyCode","hasTimer","longpress","focusTopDownEvent","focusBottomUpEvent","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","getAncestors","_this5","elem","_handleUnhover","style","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","_this8","cw","finalW","ch","finalH","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","factory","Tools","canvasFactory","content","radius","strokeWidth","strokeColor","fillColor","createRoundRect","getCanvasTexture","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","blur","margin","createShadowRect","url","createSvg","img","ObjMerger","__mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","isMf","merge","ObjectListProxy","ObjectListWrapper","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","innerHTML","htmlElement","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","StaticTexture","ListComponent","_get","_reloadVisibleElements","_visibleItems","_index","_started","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","ListItems","_scrollTransition","setIndex","immediate","closest","nElements","realIndex","diff","viewportSize","scrollDelta","ps","wasVisible","invisibleItem","getWrapper","checkStarted","ri","LinearBlurShader","_direction","_kernelRadius","redraw","uniform1i","BoxBlurShader","BlurShader","_amount","FastBlurComponent","_paddingX","_paddingY","_updateBlurSize","Wrap","WebGLFastBlurComponent","C2dFastBlurComponent","_textwrap","sel","paddingX","paddingY","kernelRadius","_amountToKernelRadius","Textwrap","C2dBlurShader","Content","_multiSpline","getSpline","_layers","_output","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","_buildLayers","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomComponent","BloomBase","BloomBaseShader","SmoothScaleComponent","_smoothScale","_iterations","its","_setIterations","scalers","useScalers","ContentWrap","Scale","contentWrap","BorderComponent","_borderTop","_borderRight","_borderBottom","_borderLeft","first","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","Borders","Top","Right","Bottom","Left","WebGLGrayscaleShader","C2dGrayscaleShader","WebGLDefaultShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","getElementWidth","getElementHeight","getVertexAttribPointerOffset","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","num","_sc","renderPrecision","renderContext","FadeOutShader","_fade","fade","VignetteShader","_magnitude","_intensity","_pivot","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","_radiusY","innerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","PerspectiveShader","MagnifierShader","_magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","bool","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","components","tools","lng"],"mappings":"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"}